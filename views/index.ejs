<html>

<head>
  <title>Express</title>
  <style>
    body {
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    body > div {
      padding: 5px;
      border-radius: 5px;
      background-color: gray;
    }

    .buttons {
      display: flex;
    }

    .buttons > * {
      flex: 1;
    }

    .table {
      background-color: white;
      border-radius: 5px;
      display: grid;
      column-gap: 10px;
      justify-items: center;
      grid-template-columns: <%= "20px auto ".concat(columns.map(()=>"auto").join(" "))%>;
    }
  </style>
</head>

<body>
  <div>
    <div class="buttons">
      <button>New Sources</button>
      <button>Current Sources</button>
    </div>
    <div class="table">
      <div class="row-0"></div>
      <div class="row-0">approved?</div>
      <% columns.forEach(col => {%>
        <div class="row-0"><%= col %></div>
      <% }); %>
    </div>
    <button class="submit">submit</button>
  </div>
  <script>
    const columns = [<%columns.forEach(str=>{ %> "<%= str%>",  <%})%>];
    const table = document.querySelector('.table');
    const [button1, button2] = document.querySelectorAll('.buttons > *');
    const submitButton = document.querySelector('.submit');

    function makeElement(tag, text, id, ...classes) {
      const element = document.createElement(tag);
      if (text) element.textContent = text;
      if (id) element.id = id;
      if (classes && classes.length !== 0) classes.forEach(newClass => element.classList.add(newClass));

      return element;
    }

    function deleteAllRows() {
      const deleteIndex = columns.length + 2;
      while (table.childElementCount > 6) table.removeChild(table.children.item(6));
    }

    button1.addEventListener("click", async () => {
      const res = await fetch("/new-sources/", {
        method: "POST",
        body: JSON.stringify({lastSearchDate: "2020"}), //TODO: storing/retriving last search date
        headers: {
          "Content-Type": "application/json"
        }
      });

      const {data} = await res.json();

      data.forEach(entry=>{
        const newRow =  columns.map(col=>entry[col]);
        const rowNumber = Number(Array.from(table.lastElementChild.classList).find(x=>x.startsWith("row-")).slice(4)) + 1;


        const rowNumberDiv = makeElement('div', rowNumber, null, `row-${rowNumber}`);

        const checkbox = makeElement('input', null, `row-${rowNumber}`);
        checkbox.type = 'checkbox';
        checkbox.name = `row-${rowNumber}`;
        checkbox.value = 'yes';
        
        table.appendChild(rowNumberDiv);
        table.appendChild(checkbox);

        newRow.forEach((field,index) => {
          table.appendChild(makeElement('div', field, null, `row-${rowNumber}`, columns[index]));
        });
      });
    });

    submitButton.addEventListener("click", async () => {
      const checkboxes = document.querySelectorAll('input[type="checkbox"]');
      const rows = [];

      checkboxes.forEach(box => {
        if (!box.checked) return;
        const row = {};
        columns.forEach(col => {
          const query = `.${box.id}.${col}`;
          row[col] = document.querySelector(query)?.textContent || ""
        });
        rows.push(row);
      });

      await fetch("/update-db", {
        method: "POST",
        body: JSON.stringify({data: rows}),
        headers: {
          "Content-Type": "application/json",
        }
      });
      deleteAllRows();
    });
  </script>
</body>

</html>
